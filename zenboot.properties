# SCRIPTING / PROCESSING
#=======================
# Execute processes asynchronously (set this to FALSE for development to get all exceptions)
zenboot.processing.asynchron=true
# Number of worker threads used for asynchronous processing (if value <= 0, a cached thread pool will be used instead a fixed pool)
zenboot.processing.workerThreads=-1
# Runtime attributes (CSV string, used for script file resolution)
zenboot.processing.attributes=
# Zenboot script dir
zenboot.processing.scriptDir=zenboot-scripts


# TEAMPLATES
#===========
# Temp file to explode the import zip
zenboot.template.tempDir=/tmp/zenboot

# HOSTS
#======'

# Plugin used functionality
#==========================
# Poolsize of maximum instances, checked by plugins
# The name-pattern for new host-instances
# used by HostService.nextHostName()
zenboot.host.instances.defaultNamePattern=host-${env}-${vmId}
# The number instances which can be booted at the same time
# used by HostService.countAvailableHosts()
zenboot.host.instances.poolSize=60
# The default lifetime in seconds,
# used by HostService.getExpiryDate
zenboot.host.instances.lifetime=60


# SYSTEM
#==================
# Define in which environment zenboot is running (allowed values are defined in org.zenboot.portal.Environment)
zenboot.environment=development
# Timeout for executed shell processes (sec)
zenboot.process.timeout=1000
## MAIL CONFIGURATION (Attention: in development mode is always SSL enabled, which is perfect to connect to Googlemail)
# SMTP host
grails.mail.host=localhost
# SMTP post
grails.mail.port=2525
# SMTP username
grails.mail.username=
# SMTP password
grails.mail.password=

## LDAP fields configuration
# zenboot.security.ldap.fields.user.email=mail
# zenboot.security.ldap.fields.user.displayName=displaynameprintable

# DATABASE (OPTIONAL - set this section if you don't want to use H2)
#===========================================================================

# The default (if you don't define anything here) looks like this right now:
# one of 'create', 'create-drop', 'update', 'validate', ''
#dataSource.dbCreate=create-drop
# hsql-InMemory:
#dataSource.url = "jdbc:h2:mem:devDb;MVCC=TRUE"

# For MySQL:
# Database username
#dataSource.username=
# Database password
#dataSource.password=
# Database driver class
#dataSource.driverClassName=com.mysql.jdbc.Driver
# Database Hibernate dialect
#dataSource.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# Database DSN
#dataSource.url=jdbc:mysql://localhost:3306/zenboot

# For H2:
# Database DSN
dataSource.url=jdbc:h2:file:target/h2-zenboot;MVCC=TRUE
# Database Hibernate dialect
dataSource.dialect=org.hibernate.dialect.H2Dialect

dataSource.properties.timeBetweenEvictionRunsMillis=5000
dataSource.properties.minEvictableIdleTimeMillis=60000
dataSource.properties.validationQuery=SELECT 1
#dataSource.properties.validationQueryTimeout=3
dataSource.properties.validationInterval=15000
dataSource.properties.testOnBorrow=true
dataSource.properties.testWhileIdle=true
dataSource.properties.testOnReturn=false

# how Hibernate will deploy changes in the database model (one of 'create', 'create-drop', 'update', 'validate', '')
dataSource.dbCreate=update
#dataSource.logSql = true
#dataSource.formatSql = true
